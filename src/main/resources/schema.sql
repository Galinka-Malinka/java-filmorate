DROP TABLE IF EXISTS genre_of_film;
DROP TABLE IF EXISTS genre;

DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS friendship_status;

DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS "user";

DROP TABLE IF EXISTS film;
DROP TABLE IF EXISTS rating;

CREATE TABLE IF NOT EXISTS rating (
rating_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(10) NOT NULL,
description text);

CREATE TABLE IF NOT EXISTS genre (
genre_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(100) NOT NULL);

CREATE TABLE IF NOT EXISTS film (
film_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(100) NOT NULL,
description text,
release_date date,
duration integer,
rating_id integer REFERENCES rating(rating_id));

CREATE TABLE IF NOT EXISTS genre_of_film (
genre_of_film_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
film_id bigint REFERENCES film(film_id),
genre_id integer REFERENCES genre(genre_id));

CREATE TABLE IF NOT EXISTS "user" (
user_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
login varchar(100) NOT NULL,
name varchar(100),
email varchar(100) NOT NULL,
birthday date);

CREATE TABLE IF NOT EXISTS friendship_status (
friendship_status_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(100));

CREATE TABLE IF NOT EXISTS friends (
friends_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
user_id bigint REFERENCES "user"(user_id),
friend_id bigint REFERENCES "user"(user_id),
friendship_status_id integer REFERENCES friendship_status(friendship_status_id));

CREATE TABLE IF NOT EXISTS likes (
likes_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
film_id bigint REFERENCES film(film_id),
user_id bigint REFERENCES "user"(user_id));